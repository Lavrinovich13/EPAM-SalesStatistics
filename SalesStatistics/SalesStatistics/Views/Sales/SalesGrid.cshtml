@using GridMvc.Html
@using GridMvc.Sorting
@model IEnumerable<SalesStatistics.Models.Sale>

@Html.Grid(Model).Named("grid").Columns(columns =>
    {
        columns.Add(c => c.Date).Titled("Date").Format("{0:MM/dd/yyyy}").Filterable(true);
        columns.Add(c => c.Manager.LastName).Titled("Manager").Filterable(true);
        columns.Add(c => c.Client.FullName).Titled("Client").Filterable(true);
        columns.Add(c => c.Product.Name).Titled("Product").Filterable(true);
        columns.Add(c => c.Sum).Titled("Sum").Filterable(true);
        if (User.IsInRole("Admin"))
        {
            columns.Add()
                          .Titled("Actions")
                          .Encoded(false)
                          .Sanitized(false)
                          .SetWidth(100)
                          .RenderValueAs(o => CustomRenderingOfColumn(o));
        }
    }).Sortable(true).WithPaging(8)

@helper CustomRenderingOfColumn(SalesStatistics.Models.Sale order)
{
    <a href="#" type="button" onclick="edit(@order.Id)">Edit</a>
    @Html.ActionLink("Remove", "RemoveSale", "Sales", new { id = order.Id }, null)
}

<script type="text/javascript">
    function edit(id) {
        var url = "/Sales/EditSale";
        $.get(url, { id: id }, function (data) {
            $("#divEdit").html(data);
            $("#divEdit").show();
            $("#divAdd").hide();
            $("#grid").hide();
        });
    }
</script>